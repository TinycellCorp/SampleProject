name: Animals Island

on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
        description: 'Branch'
        required: true
        default: 'main'
      slack-bot-token:
        type: string
        description: 'Slack bot token'
      channel-id:
        type: string
        description: 'Slack channel id'
      # version:
      #   type: string
      #   description: 'Version'
      #   required: true
      #   default: '0.1.0'
                
jobs:
  testflight:
    runs-on:
      - self-hosted
      - macOS
    environment: animals-island
    outputs:
      enabled-slack: ${{ steps.slack-inputs.outputs.enabled-slack }}
    steps:
      - name: Validation slack inputs
        id: slack-inputs
        run: |
          if [ -z "${{ inputs.slack-bot-token }}" ] || [ -z "${{ inputs.channel-id }}" ]; then
            echo "One or both inputs are missing."
            echo "ENABLED_SLACK=false" >> $GITHUB_ENV
            echo "enabled-slack=false" >> $GITHUB_OUTPUT
          else
            echo "Both inputs are provided."
            echo "ENABLED_SLACK=true" >> $GITHUB_ENV
            echo "enabled-slack=true" >> $GITHUB_OUTPUT
          fi
      - name: Notify started
        if: env.ENABLED_SLACK == 'true'
        id: slack
        env:
          SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ inputs.channel-id }}
          payload: |
            {
              "text": "Deployment started (In Progress)",
              "attachments": [
                {
                  "pretext": "Deployment started",
                  "color": "dbab09",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "In Progress"
                    }
                  ]
                }
              ]
            }
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            Xcode
      - name: Checkout
        run: |
          git clone -b ${{ inputs.branch }} codecommit::ap-northeast-2://Animal_Island Repository
          cd Repository
          sed -i '' 's/https:\/\/git-codecommit.ap-northeast-2.amazonaws.com\/v1\/repos\//codecommit::ap-northeast-2:\/\//g' .gitmodules
          git submodule init
          git submodule update
      - name: Move mobile app files to root
        run: |
          ls -lah
          shopt -s dotglob
          mv Repository/The_Maldives/* .
          rm -rf Repository
          ls -lah
      - uses: maxnowack/local-cache@v2
        with:
          path: Library
          key: ${{ runner.os }}-animalsisland-ios
      - name: Export Xcode project
        uses: siren403/unity-builder@custom
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          versioning: None
          # version: ${{ inputs.version }}
          targetPlatform: iOS
          skipActivation: true
      - name: Build and upload testflight
        env:
          APP_IDENTIFIER: ${{ vars.APP_IDENTIFIER }}
          APPLE_ID: ${{ vars.APPLE_ID }}
          ITC_TEAM_ID: ${{ vars.ITC_TEAM_ID }}
          TEAM_ID: ${{ vars.TEAM_ID }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_USER: ${{ vars.APPLE_ID }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        run: Xcode/init.sh "build/iOS/iOS" "run.sh"
      - name: Notify finished
        if: env.ENABLED_SLACK == 'true'
        env:
          SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ inputs.channel-id }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": "Deployment finished (Completed)",
              "attachments": [
                {
                  "pretext": "Deployment finished",
                  "color": "28a745",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "Completed"
                    }
                  ]
                }
              ]
            }
  failure:
    runs-on:
      - self-hosted
      - macOS
    needs: [ testflight ]
    if: ${{ failure() && needs.testflight.outputs.enabled-slack == 'true' }}
    steps:
      - name: Get testflight job id
        id: testflight-id
        uses: TinycellCorp/Actions/.github/actions/get-job-id@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: 'testflight'
      - name: Download logs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          JOB_ID: ${{ steps.testflight-id.outputs.id }}
        run: |
          gh api \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/$REPO/actions/jobs/$JOB_ID/logs >> logs.txt
      - name: Notify if failed
        env:
          SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: ${{ inputs.channel-id }}
          update-ts: ${{ steps.slack.outputs.ts }}
          payload: |
            {
              "text": "Deployment finished (Failed)",
              "attachments": [
                {
                  "pretext": "Deployment finished",
                  "color": "FF2C98",
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "Failed"
                    }
                  ]
                }
              ]
            }
      - name: Upload logs on failure
        env:
          SLACK_BOT_TOKEN: ${{ inputs.slack-bot-token }}
        id: upload_logs
        run: |
          curl -F file=@logs.txt -F "initial_comment=Failed workflow logs" \
               -F channels=${{ inputs.channel-id }} \
               -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
               https://slack.com/api/files.upload | tee response.json
          export FILE_URL=$(cat response.json | jq -r '.file.permalink')
          echo "::set-output name=file_url::$FILE_URL"
      
